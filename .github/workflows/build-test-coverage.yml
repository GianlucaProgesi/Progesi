name: build-test-coverage

on:
  push:
    branches: ['**']
  workflow_dispatch:

permissions:
  contents: read

concurrency:
  group: coverage-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-test:
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup .NET (8.x)
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: |
            8.0.x
          # Niente cache integrato: evita l'errore dei lock file mancanti

      - name: Restore & Build
        shell: pwsh
        run: |
          $slnf = Get-ChildItem -Recurse -Filter 'Progesi.CI.slnf' | Select-Object -First 1
          if (-not $slnf) { throw "Progesi.CI.slnf not found" }
          "SLNF=$($slnf.FullName)" | Out-File -FilePath $Env:GITHUB_ENV -Append
          dotnet restore "$Env:SLNF"
          dotnet build "$Env:SLNF" -c Release --no-restore

      - name: Run tests with coverage
        shell: pwsh
        run: |
          $ErrorActionPreference = 'Stop'
          $tests = @(
            'tests/ProgesiCore.Tests/ProgesiCore.Tests.csproj',
            'tests/ProgesiRepositories.Sqlite.Tests/ProgesiRepositories.Sqlite.Tests.csproj'
          ) | Where-Object { Test-Path $_ }
          foreach ($t in $tests) {
            Write-Host "==> dotnet test $t"
            dotnet test $t -c Release --no-build --collect:"XPlat Code Coverage"
          }

      - name: Generate coverage report
        uses: danielpalme/ReportGenerator-GitHub-Action@v5
        with:
          reports: '**/TestResults/**/coverage.cobertura.xml'
          targetdir: 'CoverageReport'
          reporttypes: 'Html;TextSummary;Cobertura'
          assemblyfilters: '+ProgesiCore;+ProgesiRepositories.*'
          classfilters: '-*Logger*;-*LegacyExtensions*;-*TraceLogger*'
          filefilters: '+*'
          title: ''

      - name: Print summary
        shell: pwsh
        run: |
          $summary = Get-ChildItem -Recurse -Filter 'Summary.txt' -Path 'CoverageReport' | Select-Object -First 1
          Get-Content $summary.FullName

      - name: Upload coverage
        uses: actions/upload-artifact@v4
        with:
          name: CoverageReport
          path: CoverageReport/**

      - name: Upload test results
        uses: actions/upload-artifact@v4
        with:
          name: TestResults
          path: TestResults/**

      - name: Diagnostics on failure
        if: failure()
        shell: pwsh
        run: tools/gha-dump.ps1
