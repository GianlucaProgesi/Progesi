name: build-test-coverage

on:
  workflow_dispatch:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read

concurrency:
  group: coverage-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Restore
        run: dotnet restore Progesi.sln

      - name: Build
        run: dotnet build Progesi.sln -c Release --no-restore

      # Assicurati che i progetti di test abbiano il pacchetto coverlet.collector
      - name: Test with coverage
        run: >
          dotnet test Progesi.sln -c Release --no-build
          --logger "trx;LogFileName=test-results.trx"
          --results-directory "${{ runner.temp }}/test-results"
          --collect "XPlat Code Coverage"

      - name: Collect Cobertura files
        shell: pwsh
        run: |
          $out = Join-Path $env:RUNNER_TEMP 'coverage'
          New-Item -ItemType Directory -Force -Path $out | Out-Null
          Get-ChildItem "${{ runner.temp }}/test-results" -Recurse -Filter "coverage.cobertura.xml" |
            ForEach-Object {
              $dest = Join-Path $out ("coverage-" + $_.Directory.Name + ".xml")
              Copy-Item $_.FullName $dest -Force
            }

      - name: Upload test results (TRX)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: ${{ runner.temp }}/test-results

      - name: Upload coverage (Cobertura)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage-cobertura
          path: ${{ runner.temp }}/coverage
          if-no-files-found: warn
