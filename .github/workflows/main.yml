name: Build & Test (Windows)

on:
  push:
  pull_request:

jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup MSBuild
        uses: microsoft/setup-msbuild@v2

      - name: Setup NuGet
        uses: NuGet/setup-nuget@v2

      - name: Restore
        run: nuget restore Progesi.sln

      - name: Build (Debug)
        run: msbuild Progesi.sln /p:Configuration=Debug /m

      - name: Test (discover xUnit .NET Framework)
        shell: pwsh
        run: |
          $testDlls = Get-ChildItem -Recurse -Filter "*Tests*.dll" `
            | Where-Object { $_.FullName -match "bin\\Debug\\net48" }
          if ($testDlls.Count -eq 0) { throw "No test DLLs found." }
          $vstest = "${env:ProgramFiles(x86)}\Microsoft Visual Studio\2022\Enterprise\Common7\IDE\Extensions\TestPlatform\vstest.console.exe"
          if (-not (Test-Path $vstest)) {
            $vstest = "${env:ProgramFiles(x86)}\Microsoft Visual Studio\2022\Professional\Common7\IDE\Extensions\TestPlatform\vstest.console.exe"
          }
          if (-not (Test-Path $vstest)) {
            $vstest = "${env:ProgramFiles(x86)}\Microsoft Visual Studio\2022\Community\Common7\IDE\Extensions\TestPlatform\vstest.console.exe"
          }
          if (-not (Test-Path $vstest)) { throw "vstest.console.exe not found" }
          foreach ($dll in $testDlls) {
            & $vstest $dll.FullName /Platform:x64 /InIsolation
          }
