name: Release (tag)

on:
  push:
    tags:
      - 'v*.*.*'

permissions:
  contents: write        # creare release e caricare asset
  packages: write        # pubblicare su GitHub Packages

jobs:
  pack:
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: |
            8.0.x
            6.0.x

      - name: Restore
        run: dotnet restore Progesi.CI.slnf

      - name: Build
        run: dotnet build Progesi.CI.slnf -c Release --no-restore

      - name: Pack
        run: dotnet pack src/ProgesiCore/ProgesiCore.csproj -c Release -o .\nuget --no-build

      - name: Upload package artifact
        uses: actions/upload-artifact@v4
        with:
          name: nuget
          path: nuget/*.nupkg

  release:
    runs-on: ubuntu-latest
    needs: pack
    env:
      OWNER: ${{ github.repository_owner }}
      # Se hai definito GPR_PAT lo usiamo, altrimenti si usa il GitHub token del workflow.
      GPR_TOKEN: ${{ secrets.GPR_PAT != '' && secrets.GPR_PAT || github.token }}
    steps:
      - name: Download package artifact
        uses: actions/download-artifact@v4
        with:
          name: nuget
          path: nuget

      - name: Create GitHub Release & upload asset
        uses: softprops/action-gh-release@v2
        with:
          files: nuget/*.nupkg
          generate_release_notes: true

      # ---------- NuGet.org (solo se hai il secret) ----------
      - name: Push to NuGet.org (skips if key missing)
        if: ${{ secrets.NUGET_API_KEY != '' }}
        shell: bash
        run: |
          dotnet nuget push "nuget/*.nupkg" \
            --source "https://api.nuget.org/v3/index.json" \
            --api-key "${{ secrets.NUGET_API_KEY }}" \
            --skip-duplicate

      # ---------- GitHub Packages (GPR) ----------
      # Qui usiamo l'owner come username e GPR_TOKEN (PAT se presente, altrimenti GITHUB_TOKEN) come password.
      - name: Add GitHub Packages source
        shell: bash
        run: |
          dotnet nuget add source "https://nuget.pkg.github.com/${OWNER}/index.json" \
            --name "github" \
            --username "${OWNER}" \
            --password "${GPR_TOKEN}" \
            --store-password-in-clear-text

      - name: Push to GitHub Packages (GPR)
        shell: bash
        run: |
          dotnet nuget push "nuget/*.nupkg" \
            --source "github" \
            --skip-duplicate
