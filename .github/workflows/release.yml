name: Release (tag)

on:
  push:
    tags:
      - 'v*.*.*'
  workflow_dispatch:

permissions:
  contents: write
  packages: write

jobs:
  pack:
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: |
            8.0.x
            6.0.x

      - name: Compute version from tag
        id: ver
        shell: pwsh
        run: |
          $tag = "${{ github.ref_name }}"
          if ($tag.StartsWith('v')) { $v = $tag.Substring(1) } else { $v = $tag }
          "PKG_VERSION=$v" | Out-File -FilePath $env:GITHUB_ENV -Append -Encoding utf8
          Write-Host "Version: $v"

      - name: Restore
        run: dotnet restore "Progesi.CI.slnf"

      - name: Build
        run: dotnet build "Progesi.CI.slnf" -c Release --no-restore

      - name: Pack ProgesiCore
        run: dotnet pack src/ProgesiCore/ProgesiCore.csproj -c Release -o out /p:PackageVersion=${{ env.PKG_VERSION }} /p:ContinuousIntegrationBuild=true

      - name: Upload nupkg
        uses: actions/upload-artifact@v4
        with:
          name: nuget
          path: out/*.nupkg
          if-no-files-found: error

  release:
    needs: pack
    runs-on: ubuntu-latest
    env:
      OWNER: ${{ github.repository_owner }}
      # Esponiamo i secret come env
      NUGET_API_KEY: ${{ secrets.NUGET_API_KEY }}
      GPR_PAT: ${{ secrets.GPR_PAT }}
    steps:
      - name: Download nupkg
        uses: actions/download-artifact@v4
        with:
          name: nuget
          path: nuget

      - name: Push to NuGet.org (if key present)
        if: ${{ env.NUGET_API_KEY != '' }}
        run: |
          dotnet nuget push "nuget/*.nupkg" \
            --source "https://api.nuget.org/v3/index.json" \
            --api-key "$NUGET_API_KEY" \
            --skip-duplicate

      - name: Configure GitHub Packages source (if PAT present)
        if: ${{ env.GPR_PAT != '' }}
        run: |
          dotnet nuget add source "https://nuget.pkg.github.com/${{ env.OWNER }}/index.json" \
            --name "github" \
            --username "${{ env.OWNER }}" \
            --password "$GPR_PAT" \
            --store-password-in-clear-text

      - name: Push to GitHub Packages (if PAT present)
        if: ${{ env.GPR_PAT != '' }}
        run: dotnet nuget push "nuget/*.nupkg" --source "github" --skip-duplicate

      - name: Create GitHub Release (attach nupkg)
        uses: softprops/action-gh-release@v2
        with:
          files: nuget/*.nupkg
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
