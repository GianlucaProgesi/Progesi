name: build-test-coverage

on:
  workflow_dispatch:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read

concurrency:
  group: coverage-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    runs-on: windows-latest
    env:
      DOTNET_CLI_TELEMETRY_OPTOUT: 1
      DOTNET_NOLOGO: 1

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: |
            8.0.x

      - name: Restore
        run: dotnet restore

      - name: Build (Release)
        run: dotnet build -c Release --no-restore /m

      - name: Test + collect coverage (Cobertura)
        run: >
          dotnet test -c Release --no-build
          /p:CollectCoverage=true
          /p:CoverletOutputFormat=cobertura
          /p:CoverletOutput=./TestResults/coverage.cobertura.xml

      - name: Install ReportGenerator
        run: dotnet tool update --global dotnet-reportgenerator-globaltool

      - name: Add dotnet tools to PATH
        shell: pwsh
        run: |
          $toolPath = "$env:USERPROFILE\.dotnet\tools"
          echo "$toolPath" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append

      - name: Generate HTML report
        shell: pwsh
        run: |
          New-Item -ItemType Directory -Force -Path coverage-html | Out-Null
          reportgenerator -reports:"**/coverage.cobertura.xml" -targetdir:coverage-html -reporttypes:"HtmlInline_AzurePipelines;Cobertura"
          Get-ChildItem -Path coverage-html | ForEach-Object { Write-Host $_.FullName }

      - name: Upload coverage (HTML + Cobertura)
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: coverage-html
          path: |
            **/coverage.cobertura.xml
            coverage-html/**
