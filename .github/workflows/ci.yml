name: CI
on:
  push: { branches: ["**"] }
  pull_request: { branches: ["**"] }

jobs:
  build-test:
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup NuGet
        uses: NuGet/setup-nuget@v2

      - name: Setup MSBuild
        uses: microsoft/setup-msbuild@v2

      - name: Restore
        run: nuget restore Progesi.sln

      - name: Build (Debug)
        run: msbuild Progesi.sln /p:Configuration=Debug /m

      # --- usa VSTest per i progetti .NET Framework ---
      - name: Locate VSTest
        shell: pwsh
        run: |
          $vswhere = "${env:ProgramFiles(x86)}\Microsoft Visual Studio\Installer\vswhere.exe"
          $path1 = & $vswhere -latest -requires Microsoft.Component.TestTools.BuildTools -find **\Common7\IDE\Extensions\TestPlatform\vstest.console.exe
          $path2 = & $vswhere -latest -find **\Common7\IDE\CommonExtensions\Microsoft\TestWindow\vstest.console.exe
          $vstest = if ($path1) { $path1 } elseif ($path2) { $path2 } else { "" }
          if (-not (Test-Path $vstest)) { Write-Error "vstest.console.exe not found"; exit 1 }
          "VSTEST_PATH=$vstest" | Out-File -FilePath $env:GITHUB_ENV -Append
          Write-Host "vstest.console: $vstest"

      - name: Run tests (.NET Framework) with VSTest
        shell: pwsh
        run: |
          $dlls = Get-ChildItem -Path tests -Recurse -Filter *.Tests.dll | Where-Object { $_.FullName -match '\\bin\\Debug\\' }
          if (-not $dlls) { Write-Error "No test assemblies found under tests/**/bin/Debug"; exit 1 }
          & "$env:VSTEST_PATH" $dlls.FullName /Logger:trx
        continue-on-error: false

      - name: Publish test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: '**/*.trx'
