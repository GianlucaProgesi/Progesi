name: CI

on:
  push:
    branches:
      - main
      - master
      - develop
      - chore/**
      - release/**
  pull_request:
  workflow_dispatch: {}

concurrency:
  group: ci-${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  build-test:
    name: build-test
    runs-on: windows-latest
    timeout-minutes: 40

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup .NET SDKs
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: |
            8.0.x

      - name: Cache NuGet
        uses: actions/cache@v4
        with:
          path: |
            ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.sln', '**/*.slnf', '**/*.csproj', '**/packages.lock.json') }}
          restore-keys: |
            ${{ runner.os }}-nuget-

      # Per coerenza con i numeri storici usiamo la .sln completa (non la .slnf)
      - name: Choose build target (prefer .sln, then .slnf)
        id: sln
        shell: pwsh
        run: |
          $sln = Get-ChildItem -Recurse -Filter *.sln | Select-Object -First 1
          if ($sln) { "path=$($sln.FullName)" | Out-File -FilePath $env:GITHUB_OUTPUT -Encoding utf8 -Append; exit 0 }
          $slnf = Get-ChildItem -Recurse -Filter *.slnf | Select-Object -First 1
          if ($slnf) { "path=$($slnf.FullName)" | Out-File -FilePath $env:GITHUB_OUTPUT -Encoding utf8 -Append; exit 0 }
          Write-Error "Nessun file .sln o .slnf trovato"

      - name: Echo build target
        run: echo "Using solution: ${{ steps.sln.outputs.path }}"

      - name: Restore (solution)
        shell: pwsh
        run: |
          $path = "${{ steps.sln.outputs.path }}"
          $hasLock = @(Get-ChildItem -Recurse -Filter packages.lock.json).Count -gt 0
          if ($hasLock) { dotnet restore "$path" --locked-mode } else { dotnet restore "$path" }

      - name: Verify whitespace formatting
        shell: pwsh
        run: |
          dotnet format whitespace "${{ steps.sln.outputs.path }}" --verify-no-changes

      - name: Build (solution)
        run: dotnet build "${{ steps.sln.outputs.path }}" -c Release --no-restore

      - name: Test (solution) + coverage
        shell: pwsh
        run: |
          $results = "TestResults"
          New-Item -ItemType Directory -Force -Path $results | Out-Null
          dotnet test "${{ steps.sln.outputs.path }}" -c Release --no-build `
            --logger "trx;LogFileName=test.tr
