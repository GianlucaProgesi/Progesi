name: CI

on:
  push:
    branches: [ "main", "stabilize/**", "ci/**" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build-test:
    runs-on: windows-latest
    timeout-minutes: 20

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x

      - name: Restore
        run: dotnet restore .\Progesi.sln

      - name: Build (Release)
        run: dotnet build .\Progesi.sln -c Release --no-restore

      - name: Test ProgesiCore.Tests
        run: >
          dotnet test .\tests\ProgesiCore.Tests\ProgesiCore.Tests.csproj
          -c Release --no-build
          --logger "trx;LogFileName=ProgesiCore.trx"
          --collect:"XPlat Code Coverage"
          --results-directory TestResults\Core

      - name: Test ProgesiRepositories.Sqlite.Tests
        run: >
          dotnet test .\tests\ProgesiRepositories.Sqlite.Tests\ProgesiRepositories.Sqlite.Tests.csproj
          -c Release --no-build
          --logger "trx;LogFileName=Sqlite.trx"
          --collect:"XPlat Code Coverage"
          --results-directory TestResults\Sqlite

      # Genera il report SOLO se esistono file di coverage
      - name: Generate coverage report (HTML)
        if: ${{ hashFiles('TestResults/**/coverage.cobertura.xml') != '' }}
        uses: danielpalme/ReportGenerator-GitHub-Action@v5
        with:
          reports: 'TestResults/**/coverage.cobertura.xml'
          targetdir: 'CoverageReport'
          reporttypes: 'Html;TextSummary'

      - name: Upload artifacts (coverage + trx)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage-and-testresults
          if-no-files-found: ignore
          path: |
            CoverageReport/**
            TestResults/**/*.trx
